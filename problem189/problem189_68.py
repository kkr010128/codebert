#!/usr/bin/env python3
# Generated by https://github.com/kyuridenamida/atcoder-tools
from typing import *
import collections
import functools
import itertools
import math
import sys

INF = float('inf')


def nPr(n: int, r: int) -> int:
    return math.factorial(n) // math.factorial(n - r)


def nCr(n: int, r: int) -> int:
    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))


def solve(N: int, M: int):
    return (nCr(N, 2)if N > 1 else 0) + (nCr(M, 2) if M > 1 else 0)


def main():

    sys.setrecursionlimit(10 ** 6)

    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    print(f'{solve(N, M)}')


if __name__ == '__main__':
    main()
