# This code is generated by [Atcoder_base64](https://github.com/kyomukyomupurin/AtCoder_base64)
# Original source code : 

"""
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <chrono>
#include <cmath>
#include <complex>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <tuple>
#include <utility>
#include <vector>

using namespace std;

using int64 = long long;

#define all($) begin($), end($)
#define rall($) rbegin($), rend($)

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int x; cin >> x;
  cout << !x << endl;

  return 0;
}

"""

import base64
import subprocess
import zlib


exe_bin = "c%0=~eQaA-6~F#S;(R%7)~-och}ET{*_yYwO|xXB%ueF=8Im+h+|t3)JI8jC#~eHId+wYHQA^n-d0j?URZ}$tngmP*@kfym0*Q%K87)ZD)D9t#7-E|ka;8no80!jSG55ZA&+~iN@3ArQA2*86J->U-x%Zy?ecqYy$YH0$fgrii7ZBwN^%@^!_{H0F5rXxjdh+`jv=h}5-ffWM=}m{3dh~iUy?&?0^K>UNQ-^`pAp4YWGE;>7x*l!oT(gGGHTzBUBCEHp#;oULdIhFeVDdl_(*p|qbF=>_!+AQ4%+$^3_!~-s=C?L#JWuWP?jw4&=#wWOqZ6z?JHK3D?F9<sa92v2?(4lPmFP}M>0G`$-{05W*DJ^wVV~M2ACo;Yc1)G0;|;D-`^PX^{?cnZzcqd}fA!s0yx+ULy|?u99WScYc~NEDh()J^XnL8Atrwbx<frSvWL5ed`ERwrL&V@N3w+T=K5c{dI;`>AZSW6l>>RVfI}pr3a~ij?@3WCVXoEj*Q*R5gzXi3Spik5Cu>t=H((nhjXm}e;1Tqg~B@w^#PCE8|2;<rLOd88dEURFQa3ng46Ul6HR+5!uHaa?#%A}Lg*mNqXm06d3Wo$AtfJd>EmXlc}G93<2OlG23Es(NuctRrCNu@WLPNX97NhJ`7&&9G>$;Ko_j>M_B64*Z-lchM$$VxUDn~y|sv<HVL`>?9IKQ5(Jb4tIIkuecX_D0f@G8_n>;_$!$c`+Tw4@=4%=~qI^gr}`Ehcr#ns(2=+P`|{%CBz%?hj4uEAv_b4QUr+SV>qTH^OC}t87Uo0NvBEIF;!&#n~#x39vO)Y4&i-5ub$f{9MJM7PT>7QuP|Wb5M5_3@=t%=<d<$}E_JA!>YtVzB-ifH=1mXz-zrJXbY)I6EVo0dr+O(zMc#ob`$q9hmy_<qc_y!Po%7Hd9%J&bf53iNXwc{ahmW&!CePtPChzf?ap14DXtWkp_7$4`V8H7Q_^SrI!GM<xc%uQ|FyKuF{H6hKHsG*csJFca9M%iPTMYOGW~UBS_EeglHQ+7-e$jxt4frJkZaf!%X26Z-!m0tUGvL2A;2r}mF1_Uu&(=I&=SSkBtBSLHO<a1xv!<7q4-Ar`^6p{s+tLvvIm*w`qV-qHB<;S3^0bTV*HnHV<>`>Eud4hVl&4)?zohcJC{Me%{;bOHpgir``ijc8Ql55cy`b_9gr8Y4w6`r#PKamSyZ2DGINa$8td^2QQe0L#-Qw~g$wT^bwdQcW*5i^y%FYgVx&t>z;a+0x(bZtf`75QTs7~=}X@JtR(N0f7+`m<|nyU+}5;wH1l}1TfO9z?}S~?!l>R&#zix{SED+N`>Lr>KbetFw7Dmma*OJDG;J4xxxO5p8C@%l-z_`10CmyPl0$a2ls9Mnqldz!Jmw2#~Ri0<E8I)+u~e!?6Rmuv2$1_y46#W$38GDHov+7LBQm0zv2XKIa(im83=T0>e@GhLfRU%b5O5{nz+<<h;P<BE8FQ)wdxuh(b>o2WrMdxb**;!c#iOI$j1hA0q|q&-cf+dm{+X=<}vE{UWIS8D2soP(+tsNQ>PGiraR_|*Cg^@YlZz8pFpDgHimEJS><`-)TTYWGWoPKJsfMT$2@y53Od<mHcCCHxU_@S|@l{=grhJtM_`judYU7vBk$x4t4StvSSjKjq$}4*%*@=z-8w=wt}5tyJ3o-Wr?ZY*wrL+-<IdLADn5k}94c^hbo!Gw>ILzDVfjX~zgn5&8h3Unf0qlaYIi&=H4rzoE%-dICA}KF4iMb)FSRosZ)5PU|6hcN*52wLC(dO#Z^Z%4OAYUf*GF+ZS6JANCZ`y*m!xvA=T{=+isl29Yza-!}43+gBpEOo3sq-zhbCJ)uUmEKhw#`Xtb@FL`|@y_z<)b)Nh$kai|1FzEGt(>dsEd(sv5`j_2<-aSv$h~A#ZYDI7VQr)OGnDzFDygecBo<Xml$PxKLVvC*)uh8}rJGPg#|APeQADnk^z8T*&M%vCYaQ67wpu(BsW`|Wf<Keu8XBwQ-I~axY72Z=YN8aBoXDEgHJ)9vycF4flvC7Kf>^#TX2WMs*quY=<!5LOy=L^h%i;Tj&hqGuqw71TTpQtsr+t2EUGal;yEHcY|Sl0UIV9+MxZ?cY-84vB+VEoIh{2z=rp1J?aq`xD%bewfyhS5`uKE~+Nj6TQcPmPQIQzW=o9T^(B$G_*;bS|yr{C5ingr4sGIh6~1BhWAO^mb|JC$Z@wUhlV9^z?QbwZvUWvBcf_{50b=`n)vbwfg)u<8}JDnsJXlAIx~YKJUzUgFZjac%!~f&3F?ETH?)U)e`rjYnFJ6zV6Mq5BV(dEqdI*jJKi_miR6DK4QkV>idTo-)1>~UFcSQy_<2ex_wr7<-KXf+p93T?A_?yGLO^lIEmk2e-#+sq3X1u#a6$r59L;N2AG{o^=AAa!#6m5jN!osGoE1e=DB)hHDB$|XPBJ=XXiOpzIt5j+W#w6z7;7=e2KOEZ`I%GdGc4)PWAY{qyFAfJs%tz&bRXx2Q8|e4_)fJaXa#H<38b}@rvqs(xb*DD)Stc_q{gpkhD#lhn|P6hV>;g{BavQFVlLR+x7hs(w}YQ-*QsCdYyh?BY)hfwFly@a3|d2w3ff1;??_1w^M5;@6Q3Jbv$R>srjGx^M_Q1$QN48_>@z_dHa%0JD+6zT4D1!$?)&k$X{_<$EjXtcHp7`+x_31*6}Eh%i8|uT-NscZ18a#J1B(5GKvsiSU~v5$kD;j2*z@58b`EX4UPYd^kXb#q_m`<cvg{>+{}y+N0lHLR_1Y>2D@a0aUz3fQ<>>l3MZ6IR>rYh9>p{B3#p`%ObB=P4fI<J(TI_RW7%wM5hv41b`i~FWAjOz$j#3$5)}i7X;Vz17$2SpjfQb}Y?#LA@R6}&I4m+y9G*aU`2MlbXk>_#nUoV|K#fxAemHvg@MJiOqoKi(FtM6U#FQAqk)vwRERAz=GV$?|wP4T~%Q6SYSQ(3eefj_(Uq?dD;JFyFlr#hwts0_*?6_ud(Y;D3)ryV|ftMjNSXDc56L=C&%QEDxBaFPZ8ZC^=IdxcU1E(e}Vc<W9Wh*x69MhwvmNi%6l)P7}!@#zoUW*W{xiTcki}OlsnouRH(K*OTX<~8#3F(ZI6hecMZY4I$xY=}0n9fP5M7NYcDmNFC=a7(COcQ$=RkB*isbp4`GHDZoNm(|Ticvw9TSzIiO5$po6=pLeLna0JRedF7GwQ4tl5=bY&Ly%HPE*wukEQ{6QbTNBij$10PNo48$Tl!f)~nSf^xr4?E~Hx|?4Neu+aNhO{&u9j#Xz6`p5^D{`RjLp(}#OL(9Vz1r}2mz<ShpJ{CBB642Nqxe|@I+v_?by@NNKFU>&B{eTP9G-j&CZ`5P9zFMyuo9LD?aB+}lRpbzg5pnk6X+-F7f5YpbRz{7h5=!2-zekZE#|7oQ86!hU;0~FrVy#Jv8k1+i~#>4vuD7@#X{;d}JPa@;Dyh=O+D7^b2@#A0Q^x-`Pw7|*xIC`Gbhj$lH-d`S$ew)*W`y<eO+&k1~X3=*!eYhV2<(?H){r>^ehdT+}gZcX~uMhOc$h`jTzAM|+|4U9E-j6{2+=S=-`5UBt7lC+C<vTO$2Pe<_pMKA6G3dklBj0RYAFux!(tNMSqxA3i3}79r<@BIk7m(I}KAu%zA9V^JQ~#TszJBland{;8A#E@W^!58ZQw(zRFUaY?&+6v`H=y6e;Z|`;tN3k@>2EN{(Q~F7Rj>bgL)(q1hb{aZSIF<5TWs{d&jOsA9M0?i8~glX9{"

open("./kyomu", 'wb').write(zlib.decompress(base64.b85decode(exe_bin)))
subprocess.run(["chmod +x ./kyomu"], shell=True)
subprocess.run(["./kyomu"], shell=True)