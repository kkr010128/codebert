#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
??????????????????
?????????????????????????????´?????????????????????
????????§?????????????????????(S, H, C, D)??¨???????????°???(1, 2, ..., 9)??????
?§??????????????¨? 36 ????????????????????¨????????????
????????°??????????????? 8 ???"H8"??????????????? 1 ???"D1"??¨??¨????????????

????????????????????????????????????????????¢?????´??????????????¨?????????
??????????????? N ????????????????????????????????°???????????????
???????????´?????????????????°????????????????????????????????????
??¢?????´??????????????????????????\????????????????????????????????????????????¨????????????
??°??????????´???? 0 ??????????????§?¨???°?????????????????????

1 BubbleSort(C, N)
2   for i = 0 to N-1
3     for j = N-1 downto i+1
4       if C[j].value < C[j-1].value
5         C[j] ??¨ C[j-1] ?????????
6
7 SelectionSort(C, N)
8   for i = 0 to N-1
9     minj = i
10    for j = i to N-1
11      if C[j].value < C[minj].value
12        minj = j
13    C[i] ??¨ C[minj] ?????????

??????????????¢?????´?????????????????????????????????????????\??????????????????????????????????????£??????????????±????????????????????????

"""
import math

def swap(A, x, y):
    """ ??????A???x????????¨y?????????????´??????\???????????? """
    t = A[x]
    A[x] = A[y]
    A[y] = t

def value(c):
    """ ??????????????°?????¨???????????? """
    return int(c[1:])

def suits(A):
    """ ????????????????????????????????¨???????????????????????? """
    s = ""
    for c in A:
        s = s + c[0]
    return s

def bSort(A, N):
    """ ?????????????????? """
    for i in range(0, N-1):
        for j in range(N-1, i, -1):
            if value(A[j]) < value(A[j-1]):
                swap(A,j,j-1)

def sSort(A, N):
    """ ?????????????????? """
    for i in range(0, N-1):
        minj = i
        for j in range(i,N):
            if value(A[j]) < value(A[minj]):
                minj = j
        if minj != i:
            swap(A,i,minj)

# ?????????
N = int(input().strip())
A = input().strip().split()
bA = A[:]
bSort(bA,N)
b1 = suits(bA)
print(" ".join(map(str,bA)))
print("Stable")

sA = A[:]
sSort(sA,N)
s1 = suits(sA)
print(" ".join(map(str,sA)))
if s1 == b1:
    print("Stable")
else:
    print("Not stable")