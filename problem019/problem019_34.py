def do_round_robin(process, tq):
    from collections import deque
    q = deque()
    elapsed_time = 0  # ??????????????????????§??????????????????????
    finished_process = []  # ????????????????????????????????????????????¨??????????????????????????§?????????

    # ?????\?????????????????????????????????
    for process_name, remaining_time in process:
        q.append([process_name, int(remaining_time)])

    while True:
        try:
            process_name, remaining_time = q.pop()
        except IndexError:  # ??????????????£???????????????????????????????????£???
            break
        else:
            elapsed_time += min(remaining_time, tq)
            remaining_time -= tq
            if remaining_time > 0:
                q.appendleft([process_name, remaining_time])
            else:
                finished_process.append((process_name, elapsed_time))
    return finished_process


if __name__ == '__main__':
    # ??????????????\???
    # ????????????????????????????????????????????????????°??????????????????????????????¨
    data = [int(x) for x in input().split(' ')]
    num_of_process = data[0]
    time_quantum = data[1]
    process = []
    for i in range(num_of_process):
        process.insert(0, [x for x in input().split(' ')])

    # ??????
    results = do_round_robin(process, time_quantum)

    # ???????????????
    for i in results:
        print('{0} {1}'.format(i[0], i[1]))